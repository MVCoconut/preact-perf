{
  "name": "preact-router",
  "amdName": "preactRouter",
  "version": "1.2.4",
  "description": "Connect your components up to that address bar.",
  "main": "dist/preact-router.js",
  "jsnext:main": "src/index.js",
  "minified:main": "dist/preact-router.min.js",
  "scripts": {
    "clean": "rimraf dist/",
    "build": "npm-run-all clean transpile minify size",
    "transpile": "rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_main",
    "minify": "uglifyjs $npm_package_main --mangle-regex=\"/^(classCallCheck|components|normalizeName|add|clean|process|collect|create|nodes|itemsOffline)$/\" --mangle-props -cm -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map",
    "size": "size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"",
    "test": "eslint {src,test} && mocha --compilers js:babel/register test/**/*.js",
    "prepublish": "npm run build",
    "release": "npm run build && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish"
  },
  "keywords": [
    "preact",
    "router"
  ],
  "author": {
    "name": "Jason Miller",
    "email": "jason@developit.ca"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/developit/preact-router.git"
  },
  "bugs": {
    "url": "https://github.com/developit/preact-router/issues"
  },
  "homepage": "https://github.com/developit/preact-router",
  "peerDependencies": {
    "preact": "*"
  },
  "devDependencies": {
    "babel": "^5.8.23",
    "babel-eslint": "^5.0.0",
    "chai": "^3.5.0",
    "eslint": "^2.0.0",
    "gzip-size-cli": "^1.0.0",
    "mkdirp": "^0.5.1",
    "mocha": "^2.4.5",
    "npm-run-all": "^1.5.1",
    "preact": "^3.4.0",
    "pretty-bytes-cli": "^1.0.0",
    "rimraf": "^2.5.1",
    "rollup": "^0.25.2",
    "rollup-plugin-babel": "^1.0.0",
    "sinon": "^1.17.3",
    "sinon-chai": "^2.8.0",
    "uglify-js": "^2.6.1"
  },
  "readme": "# preact-router\n\n[![NPM](http://img.shields.io/npm/v/preact-router.svg)](https://www.npmjs.com/package/preact-router)\n[![travis-ci](https://travis-ci.org/developit/preact-router.svg)](https://travis-ci.org/developit/preact-router)\n\nConnect your [Preact] components up to that address bar.\n\n`preact-router` provides a `<Router />` component that conditionally renders its children when the URL matches their `path`. It also includes a convenient `<Link />` component as a drop-in replacement for `<a />` wired up to the router.\n\n\n---\n\n\n### Usage Example\n\n```js\nimport Router from 'preact-router';\nimport { h } from 'preact';\n/** @jsx h */\n\nconst Main = () => (\n\t<Router>\n\t\t<Home path=\"/\" />\n\t\t<About path=\"/about\" />\n\t\t<Search path=\"/search/:query\" />\n\t</Router>\n);\n\nrender(<Main />, document.body);\n```\n\n\n### Handling URLS\n\n:information_desk_person: Pages are just regular components that get mounted when you navigate to a certain URL.\nAny URL parameters get passed to the component as `props`.\n\nDefining what component(s) to load for a given URL is easy and declarative.\nYou can even mix-and-match URL parameters and normal `props`.\n\n```js\n<Router>\n  <A path=\"/\" />\n  <B path=\"/b\" id=\"42\" />\n  <C path=\"/c/:id\" />\n  <D default />\n</Router>\n```\n\n\n\n---\n\n\n### License\n\n[MIT]\n\n\n[Preact]: https://github.com/developit/preact\n[MIT]: http://choosealicense.com/licenses/mit/\n",
  "readmeFilename": "README.md",
  "gitHead": "2ef7896d674453cebad8115c0da9bf99871e5c1a",
  "_id": "preact-router@1.2.4",
  "_shasum": "cf5028e557688c6a4529c5c4bb0c1562c2656ae8",
  "_from": "preact-router@latest"
}
